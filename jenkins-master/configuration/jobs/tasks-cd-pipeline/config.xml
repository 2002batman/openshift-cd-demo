<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.0">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.0">
    <script>node(&apos;maven&apos;) {
   // define commands
   def ocCmd = &quot;/usr/local/bin/oc --token=`cat /var/run/secrets/kubernetes.io/serviceaccount/token` --server=https://openshift.default.svc.cluster.local --certificate-authority=/run/secrets/kubernetes.io/serviceaccount/ca.crt&quot;
   def mvnCmd = &quot;mvn -s configuration/cicd-settings.xml&quot;

   stage &apos;Build&apos;
   git branch: 'eap-7', url: &apos;https://github.com/siamaksade/openshift-tasks.git&apos;
   def v = version()
   sh &quot;${mvnCmd} clean install -DskipTests=true&quot;

   stage &apos;Test and Analysis&apos;
   parallel (
       &apos;Test&apos;: {
           sh &quot;${mvnCmd} test&quot;
           step([$class: &apos;JUnitResultArchiver&apos;, testResults: &apos;**/target/surefire-reports/TEST-*.xml&apos;])
       },
       &apos;Static Analysis&apos;: {
           sh &quot;${mvnCmd} jacoco:report sonar:sonar -Dsonar.host.url=http://sonarqube:9000 -DskipTests=true&quot;
       }
   )

   stage &apos;Push to Nexus&apos;
   sh &quot;${mvnCmd} deploy -DskipTests=true&quot;

   stage &apos;Deploy DEV&apos;
   sh &quot;rm -rf oc-build &amp;&amp; mkdir -p oc-build/deployments&quot;
   sh &quot;cp target/openshift-tasks.war oc-build/deployments/ROOT.war&quot;
   // clean up. keep the image stream
   sh &quot;${ocCmd} delete bc,dc,svc,route -l app=tasks -n dev&quot;
   // create build. override the exit code since it complains about exising imagestream
   sh &quot;${ocCmd} new-build --name=tasks --image-stream=wildfly --binary=true --labels=app=tasks -n dev || true&quot;
   // build image
   sh &quot;${ocCmd} start-build tasks --from-dir=oc-build --wait=true -n dev&quot;
   // deploy image
   sh &quot;${ocCmd} new-app tasks:latest -n dev&quot;
   sh &quot;${ocCmd} expose svc/tasks -n dev&quot;
   // tag for stage
   sh &quot;${ocCmd} tag dev/tasks:latest stage/tasks:${v}&quot;

   stage &apos;Deploy STAGE&apos;
   // clean up. keep the imagestream
   sh &quot;${ocCmd} delete bc,dc,svc,route -l app=tasks -n stage&quot;
   // deploy stage image
   sh &quot;${ocCmd} new-app tasks:${v} -n stage&quot;
   sh &quot;${ocCmd} expose svc/tasks -n stage&quot;
}

def version() {
  def matcher = readFile(&apos;pom.xml&apos;) =~ &apos;&lt;version&gt;(.+)&lt;/version&gt;&apos;
  matcher ? matcher[0][1] : null
}

</script>
    <sandbox>false</sandbox>
  </definition>
  <triggers/>
</flow-definition>
